/*
Deployment script for NCRS_Data

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "NCRS_Data"
:setvar DefaultFilePrefix "NCRS_Data"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER01\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER01\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Complaints].[CurrentStatus] on table [dbo].[Complaints] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[Complaints].[Date] on table [dbo].[Complaints] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[Complaints].[SourceAddress] on table [dbo].[Complaints] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column Address on table [dbo].[Complaints] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column Category on table [dbo].[Complaints] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column Category in table [dbo].[Complaints] is currently  NVARCHAR (200) NULL but is being changed to  INT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NOT NULL.

The column Name on table [dbo].[Complaints] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Complaints])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'The following operation was generated from a refactoring log file 00cb9644-ebe4-4026-88f6-df83f323e169';

PRINT N'Rename [dbo].[Complaints].[ComplaintDescription] to Category';


GO
EXECUTE sp_rename @objname = N'[dbo].[Complaints].[ComplaintDescription]', @newname = N'Category', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file f75951af-c4b0-4b27-a9e9-e95f165978f0';

PRINT N'Rename [dbo].[Complaints].[SourceAddress] to ComplaintDescription';


GO
EXECUTE sp_rename @objname = N'[dbo].[Complaints].[SourceAddress]', @newname = N'ComplaintDescription', @objtype = N'COLUMN';


GO
PRINT N'Altering Table [dbo].[Complaints]...';


GO
ALTER TABLE [dbo].[Complaints] ALTER COLUMN [Address] NVARCHAR (100) NOT NULL;

ALTER TABLE [dbo].[Complaints] ALTER COLUMN [Category] INT NOT NULL;

ALTER TABLE [dbo].[Complaints] ALTER COLUMN [ComplaintDescription] NVARCHAR (200) NULL;

ALTER TABLE [dbo].[Complaints] ALTER COLUMN [Name] NVARCHAR (50) NOT NULL;


GO
ALTER TABLE [dbo].[Complaints]
    ADD [SourceAddress] NVARCHAR (100) NOT NULL,
        [Date]          DATETIME       NOT NULL,
        [CurrentStatus] INT            NOT NULL;


GO
PRINT N'Refreshing Procedure [dbo].[INSERT_Complaints]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[INSERT_Complaints]';


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '00cb9644-ebe4-4026-88f6-df83f323e169')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('00cb9644-ebe4-4026-88f6-df83f323e169')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f75951af-c4b0-4b27-a9e9-e95f165978f0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f75951af-c4b0-4b27-a9e9-e95f165978f0')

GO

GO
PRINT N'Update complete.';


GO
