/*
Deployment script for db_training

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "db_training"
:setvar DefaultFilePrefix "db_training"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER01\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER01\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 00cb9644-ebe4-4026-88f6-df83f323e169 is skipped, element [dbo].[Complaints].[ComplaintDescription] (SqlSimpleColumn) will not be renamed to Category';


GO
PRINT N'Rename refactoring operation with key f75951af-c4b0-4b27-a9e9-e95f165978f0 is skipped, element [dbo].[Complaints].[SourceAddress] (SqlSimpleColumn) will not be renamed to ComplaintDescription';


GO
PRINT N'Creating Table [dbo].[Complaints]...';


GO
CREATE TABLE [dbo].[Complaints] (
    [Id]                   UNIQUEIDENTIFIER NOT NULL,
    [Name]                 NVARCHAR (50)    NOT NULL,
    [Address]              NVARCHAR (100)   NOT NULL,
    [Category]             INT              NOT NULL,
    [ComplaintDescription] NVARCHAR (200)   NULL,
    [SourceAddress]        NVARCHAR (100)   NOT NULL,
    [Date]                 DATETIME         NOT NULL,
    [CurrentStatus]        INT              NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[INSERT_Complaints]...';


GO
CREATE PROCEDURE [dbo].[INSERT_Complaints]
	@Name NVARCHAR(50),
	@Address NVARCHAR(100),
	@Category INT,
	@ComplaintDescription NVARCHAR(200),
	@SourceAddress NVARCHAR(100)

AS
INSERT INTO Complaints 
(Name, Address, ComplaintDescription, Category, SourceAddress)
values
(NEWID(), @Name, @Address, @Category, @ComplaintDescription, @SourceAddress, SYSUTCDATETIME(), 0)
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '00cb9644-ebe4-4026-88f6-df83f323e169')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('00cb9644-ebe4-4026-88f6-df83f323e169')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f75951af-c4b0-4b27-a9e9-e95f165978f0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f75951af-c4b0-4b27-a9e9-e95f165978f0')

GO

GO
PRINT N'Update complete.';


GO
